[gd_scene load_steps=7 format=2]

[ext_resource path="res://Assets/character.dae" type="PackedScene" id=1]
[ext_resource path="res://Scripts/CharacterAnimation.gd" type="Script" id=2]
[ext_resource path="res://Assets/Environment/Textures/character_body_basecolor.png" type="Texture" id=3]
[ext_resource path="res://Assets/character_face.material" type="Material" id=4]

[sub_resource type="Shader" id=1]

code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform float specular;
uniform float metallic;
uniform float roughness : hint_range(0,1);
uniform float point_size : hint_range(0,128);
uniform sampler2D texture_metallic : hint_white;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_white;
uniform vec4 roughness_texture_channel;
uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
uniform vec3 uv2_scale;
uniform vec3 uv2_offset;

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	float l = .5;
	bool w = albedo_tex.r >= l && albedo_tex.g >= l && albedo_tex.b >= l;
	vec3 white = vec3(1.0, 1.0, 1.0);
	ALBEDO = mix(albedo_tex.rgb * white, (albedo_tex * albedo).rgb, w ? 0.0 : 1.0);
	float metallic_tex = dot(texture(texture_metallic,base_uv),metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	float roughness_tex = dot(texture(texture_roughness,base_uv),roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
	SPECULAR = specular;
}
"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/albedo = Color( 0.0856934, 0.409275, 0.914063, 1 )
shader_param/specular = 0.5
shader_param/metallic = 0.0
shader_param/roughness = 1.0
shader_param/point_size = 1.0
shader_param/metallic_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/roughness_texture_channel = Plane( 1, 0, 0, 0 )
shader_param/uv1_scale = Vector3( 1, 1, 1 )
shader_param/uv1_offset = Vector3( 0, 0, 0 )
shader_param/uv2_scale = Vector3( 1, 1, 1 )
shader_param/uv2_offset = Vector3( 0, 0, 0 )
shader_param/texture_albedo = ExtResource( 3 )
_sections_unfolded = [ "Resource", "shader_param" ]

[node name="Character" index="0" instance=ExtResource( 1 )]

script = ExtResource( 2 )

[node name="rig" parent="." index="0"]

_sections_unfolded = [ "Transform" ]

[node name="Skeleton" parent="rig" index="0"]

_sections_unfolded = [ "bones" ]

[node name="character" parent="rig/Skeleton" index="0"]

material/0 = SubResource( 2 )
material/1 = ExtResource( 4 )
_sections_unfolded = [ "material" ]

[node name="AnimationPlayer" parent="." index="1"]

autoplay = "idle-loop"
playback_speed = 1.25
_sections_unfolded = [ "Playback Options" ]



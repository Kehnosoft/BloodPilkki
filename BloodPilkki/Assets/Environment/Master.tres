[gd_resource type="ShaderMaterial" load_steps=11 format=3 uid="uid://kfq4ci6bdykp"]

[ext_resource type="Texture2D" uid="uid://cylufsm7n17qc" path="res://Assets/Environment/Textures/snow_ARM.png" id="1"]
[ext_resource type="Texture2D" uid="uid://dm4stvrt5cjfb" path="res://Assets/Environment/Textures/ice_ARM.png" id="2"]
[ext_resource type="Texture2D" uid="uid://bq761k427knoi" path="res://Assets/Environment/Textures/snow_basecolor.png" id="3"]
[ext_resource type="Texture2D" uid="uid://bkd1k85bilcsa" path="res://Assets/Environment/Textures/ice_basecolor.png" id="4"]
[ext_resource type="Texture2D" uid="uid://b8qgwy212lucn" path="res://Assets/Environment/Textures/test_alpha.png" id="5"]
[ext_resource type="Texture2D" uid="uid://cu53c3vjpbbiu" path="res://Assets/Environment/Textures/snow_height.png" id="6"]
[ext_resource type="Texture2D" uid="uid://e5tvjshp0g0k" path="res://Assets/Environment/Textures/ice_height.png" id="7"]
[ext_resource type="Texture2D" uid="uid://cjek74t6ovpau" path="res://Assets/Environment/Textures/snow_normal.png" id="8"]
[ext_resource type="Texture2D" uid="uid://drjqw1kwlwsd6" path="res://Assets/Environment/Textures/ice_normal.png" id="9"]

[sub_resource type="Shader" id="1"]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_back,diffuse_burley,specular_schlick_ggx, unshaded;

uniform sampler2D albedo_map1 : source_color;
uniform sampler2D albedo_map2 : source_color;

uniform sampler2D normal_map1 : hint_normal;
uniform sampler2D normal_map2 : hint_normal;

uniform sampler2D height_map1;
uniform sampler2D height_map2;

uniform sampler2D ARM_map1;
uniform sampler2D ARM_map2;

uniform sampler2D alpha_map;

uniform bool use_height;
uniform float height_intensity : hint_range(-1, 1);
uniform float normal_scale : hint_range(-16,16);

uniform vec3 uv1_scale  = vec3(1, 1, 1);
uniform vec3 uv1_offset = vec3(0, 0, 0);

uniform vec3 uv2_scale  = vec3(1, 1, 1);
uniform vec3 uv2_offset = vec3(0, 0, 0);

void vertex() {

	vec2 base_uv = UV * uv1_scale.xy + uv1_offset.xy;
	vec2 alpha_uv = UV * uv2_scale.xy + uv2_offset.xy;

	float a =  texture(alpha_map, alpha_uv).r;

	if (use_height) {
		VERTEX.y += mix(0, height_intensity, a);
		TANGENT = normalize ( vec3(0.0, mix(0, height_intensity, a), 0.4) );
//		TANGENT = normalize( vec3(0.0, height(VERTEX.xz + vec2(0.0, 0.2), TIME, noise) - height(VERTEX.xz + vec2(0.0, -0.2), TIME, noise), 0.4));
		BINORMAL = normalize( vec3( 0.4, mix(0, height_intensity, a), 0.0) );
//		BINORMAL = normalize( vec3(0.4, height(VERTEX.xz + vec2(0.2, 0.0), TIME, noise) - height(VERTEX.xz + vec2(-0.2, 0.0), TIME, noise), 0.0));
		NORMAL = cross(TANGENT, BINORMAL);
	}
		
}

void fragment() {
	
	vec2 base_uv = UV * uv1_scale.xy + uv1_offset.xy;
	vec2 alpha_uv = UV * uv2_scale.xy + uv2_offset.xy;
	
	float h1 = texture(height_map1, base_uv).r;
	float h2 = texture(height_map2, base_uv).r;
	vec4 a =  texture(alpha_map, alpha_uv);	
	vec4 b = vec4(1.0 - a.r, 1.0 - a.g, 1.0 - a.b, 1); // flip the mofo
	
	float height_difference = smoothstep(.25, .75, b.r);

	vec3 albedo_mix = mix(texture(albedo_map1, base_uv).rgb, texture(albedo_map2, base_uv).rgb, height_difference);
	vec3 normal_mix = mix(texture(normal_map1, base_uv).rgb, texture(normal_map2, base_uv).rgb, height_difference);
	vec3 ARM_mix    = mix(texture(ARM_map1, base_uv).rgb, texture(ARM_map2, base_uv).rgb, height_difference);
	
	ALBEDO          = albedo_mix;	
	NORMAL          = normal_mix;
	NORMAL_MAP_DEPTH = normal_scale;	
	AO              = ARM_mix.r;
	ROUGHNESS       = ARM_mix.g;
	METALLIC        = ARM_mix.b;
		
}"

[resource]
render_priority = 0
shader = SubResource("1")
shader_parameter/use_height = true
shader_parameter/height_intensity = 0.25
shader_parameter/normal_scale = 1.0
shader_parameter/uv1_scale = Vector3(5, 5, 5)
shader_parameter/uv1_offset = Vector3(0, 0, 0)
shader_parameter/uv2_scale = Vector3(1, 1, 1)
shader_parameter/uv2_offset = Vector3(0, 0, 0)
shader_parameter/albedo_map1 = ExtResource("3")
shader_parameter/albedo_map2 = ExtResource("4")
shader_parameter/normal_map1 = ExtResource("8")
shader_parameter/normal_map2 = ExtResource("9")
shader_parameter/height_map1 = ExtResource("6")
shader_parameter/height_map2 = ExtResource("7")
shader_parameter/ARM_map1 = ExtResource("1")
shader_parameter/ARM_map2 = ExtResource("2")
shader_parameter/alpha_map = ExtResource("5")
